import {
    useDeletePhongChieu,
    useUpdatePhongChieu,
    useListPhongChieuTH0,
} from "../../../hook/PhongChieuHook";
import Swal from "sweetalert2";
import type { PhongChieu } from "../../../types/phongchieu";

export default function PhongChieuChuaXuatBanList() {
    const { data: phongchieus, isLoading } = useListPhongChieuTH0();
    const deletePhongChieu = useDeletePhongChieu();
    const updatePhongChieu = useUpdatePhongChieu();

    if (isLoading) return <p className="text-center mt-4">ƒêang t·∫£i danh s√°ch...</p>;

    // L·ªçc ph√≤ng chi·∫øu ch∆∞a xu·∫•t b·∫£n (trang_thai = 0)
    const phongChieuChuaXuatBan =
        phongchieus?.filter((pc: PhongChieu) => Number(pc.trang_thai) === 0) || [];

    const handleDelete = (id: number) => {
        Swal.fire({
            title: "X√°c nh·∫≠n x√≥a?",
            text: "H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "X√≥a",
            cancelButtonText: "H·ªßy",
        }).then((result) => {
            if (result.isConfirmed) deletePhongChieu.mutate(id);
        });
    };

    const handleUpdate = (id: number, currentName: string) => {
        Swal.fire({
            title: "C·∫≠p nh·∫≠t t√™n ph√≤ng chi·∫øu",
            input: "text",
            inputValue: currentName,
            inputPlaceholder: "Nh·∫≠p t√™n m·ªõi...",
            showCancelButton: true,
            confirmButtonText: "L∆∞u",
            cancelButtonText: "H·ªßy",
            preConfirm: (value) => {
                if (!value.trim()) {
                    Swal.showValidationMessage("T√™n ph√≤ng chi·∫øu kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");
                }
                return value;
            },
        }).then((result) => {
            if (result.isConfirmed) {
                updatePhongChieu.mutate({
                    id,
                    values: { ten_phong: result.value },
                });
            }
        });
    };

    return (
        <div className="container p-4">
            <h4 className="mb-4 text-center">üé• Ph√≤ng chi·∫øu ch∆∞a xu·∫•t b·∫£n</h4>

            <div className="table-responsive">
                <table className="table table-bordered table-striped align-middle mx-auto">
                    <thead className="table-light text-center">
                        <tr>
                            <th>ID</th>
                            <th>T√™n ph√≤ng</th>
                            <th>Lo·∫°i s∆° ƒë·ªì</th>
                            <th>H√†ng th∆∞·ªùng</th>
                            <th>H√†ng VIP</th>
                            <th>Tr·∫°ng th√°i</th>
                            <th>Ng√†y t·∫°o</th>
                            <th>H√†nh ƒë·ªông</th>
                        </tr>
                    </thead>
                    <tbody>
                        {phongChieuChuaXuatBan.length ? (
                            phongChieuChuaXuatBan.map((pc: PhongChieu) => (
                                <tr key={pc.id}>
                                    <td className="text-center">{pc.id}</td>
                                    <td>{pc.ten_phong}</td>
                                    <td>{pc.loai_so_do}</td>
                                    <td className="text-center">{pc.hang_thuong}</td>
                                    <td className="text-center">{pc.hang_vip}</td>
                                    <td className="text-center">
                                        <span className="badge bg-secondary">Ch∆∞a xu·∫•t b·∫£n</span>
                                    </td>
                                    <td className="text-center">
                                        {new Date(pc.created_at).toLocaleDateString("vi-VN")}
                                    </td>
                                    <td className="text-center">
                                        <div className="btn-group">
                                            <button
                                                className="btn btn-outline-secondary btn-sm">
                                                Xem b·∫£n ƒë·ªì gh·∫ø
                                            </button>
                                            <button
                                                className="btn btn-outline-primary btn-sm"
                                                onClick={() => handleUpdate(pc.id, pc.ten_phong)}
                                                disabled={updatePhongChieu.isPending}
                                            >
                                                {updatePhongChieu.isPending ? "ƒêang l∆∞u..." : "C·∫≠p nh·∫≠t"}
                                            </button>

                                            <button
                                                className="btn btn-outline-danger btn-sm"
                                                onClick={() => handleDelete(pc.id)}
                                                disabled={deletePhongChieu.isPending}
                                            >
                                                {deletePhongChieu.isPending ? "ƒêang x√≥a..." : "X√≥a"}
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            ))
                        ) : (
                            <tr>
                                <td colSpan={8} className="text-center text-muted py-3">
                                    Kh√¥ng c√≥ ph√≤ng chi·∫øu n√†o ch∆∞a xu·∫•t b·∫£n.
                                </td>
                            </tr>
                        )}
                    </tbody>
                </table>
            </div>
        </div>
    );
}
