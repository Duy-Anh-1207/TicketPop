import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import Swal from "sweetalert2";
import {
  getListLichChieu,
  getLichChieuById,
  createLichChieu,
  updateLichChieu,
  deleteLichChieu,
} from "../provider/LichChieuProviders";
import type { LichChieu } from "../types/lichchieu";

// üîπ L·∫•y danh s√°ch l·ªãch chi·∫øu
export const useListLichChieu = () =>
  useQuery<LichChieu[]>({
    queryKey: ["lich-chieu"],
    queryFn: getListLichChieu,
  });

// üîπ L·∫•y chi ti·∫øt l·ªãch chi·∫øu
export const useLichChieuDetail = (id: number | string | null) =>
  useQuery<LichChieu>({
    queryKey: ["lich-chieu", id],
    queryFn: () => getLichChieuById(id!),
    enabled: !!id, // Ch·ªâ ch·∫°y khi c√≥ id
  });

// üîπ Th√™m l·ªãch chi·∫øu
export const useCreateLichChieu = () => {
  const queryClient = useQueryClient();

  return useMutation({
    mutationFn: (values: {
      phim_id: number;
      phong_id: number;
      phien_ban_id?: number;
      gio_chieu: string;
      gio_ket_thuc: string;
    }) => createLichChieu(values),

    onSuccess: (res) => {
      Swal.fire("‚úÖ Th√†nh c√¥ng!", res.message || "ƒê√£ th√™m l·ªãch chi·∫øu m·ªõi!", "success");
      queryClient.invalidateQueries({ queryKey: ["lich-chieu"] });
    },
    onError: (error: unknown) => {
      const err = error as { response?: { data?: { message?: string } } };
      Swal.fire(
        "‚ùå L·ªói!",
        err.response?.data?.message || "Kh√¥ng th·ªÉ th√™m l·ªãch chi·∫øu.",
        "error"
      );
    },
  });
};

// üîπ C·∫≠p nh·∫≠t l·ªãch chi·∫øu
export const useUpdateLichChieu = () => {
  const queryClient = useQueryClient();

  return useMutation({
    mutationFn: ({
      id,
      values,
    }: {
      id: string | number;
      values: Partial<Omit<LichChieu, "id" | "created_at" | "updated_at" | "deleted_at">>;
    }) => updateLichChieu(id, values),

    onSuccess: (res) => {
      Swal.fire("‚úÖ Th√†nh c√¥ng!", res.message || "ƒê√£ c·∫≠p nh·∫≠t l·ªãch chi·∫øu.", "success");
      queryClient.invalidateQueries({ queryKey: ["lich-chieu"] });
    },
    onError: (error: unknown) => {
      const err = error as { response?: { data?: { message?: string } } };
      Swal.fire(
        "‚ùå L·ªói!",
        err.response?.data?.message || "Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t l·ªãch chi·∫øu.",
        "error"
      );
    },
  });
};

// üîπ X√≥a l·ªãch chi·∫øu
export const useDeleteLichChieu = () => {
  const queryClient = useQueryClient();

  return useMutation({
    mutationFn: (id: number | string) => deleteLichChieu(id),
    onSuccess: () => {
      Swal.fire("üóëÔ∏è ƒê√£ x√≥a!", "L·ªãch chi·∫øu ƒë√£ ƒë∆∞·ª£c x√≥a.", "success");
      queryClient.invalidateQueries({ queryKey: ["lich-chieu"] });
    },
    onError: (error: unknown) => {
      const err = error as { response?: { data?: { message?: string } } };
      Swal.fire("‚ùå L·ªói!", err.response?.data?.message || "Kh√¥ng th·ªÉ x√≥a l·ªãch chi·∫øu.", "error");
    },
  });
};
